@page "/servername"
@using Microsoft.AspNetCore.Authorization
@using ServerManagement.Models
@using ServerManagement.StateStore

@rendermode InteractiveServer

@inherits BaseComponent

@inject NavigationManager NavigationManager
@inject SessionStorage SessionStorage

<h3>Server Name</h3>
<br />

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<FieldComponent Label="Name">
    <Control>
        <input type="text" @bind-value="server.Name" class="form-control"></input>
    </Control>
</FieldComponent>
<br />
<button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>

@code {
    private Server? server = new();

    private string? errorMessage;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            server = new Server();
            StateHasChanged();
        }
    }

    private async Task GoNext()
    {     
        if (server is not null)
        {
            // NavigationManager.NavigateTo($"/cityname?servername={server.Name}");
            await SessionStorage.SetServerAsync(server);
            NavigationManager.NavigateTo("/cityname");
        }
    }

}