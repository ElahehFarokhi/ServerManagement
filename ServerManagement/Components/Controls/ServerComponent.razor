@using ServerManagement.Components.Pages
@using ServerManagement.Models
@using ServerManagement.StateStore
@inject NavigationManager NavigationManager
@inject TorontoOnlineServersStore TorontoOnlineServersStore
@inject CalgaryOnlineServersStore CalgaryOnlineServersStore
@inject OttawaOnlineServersStore OttawaOnlineServersStore
@inject HalifaxOnlineServersStore HalifaxOnlineServersStore
@inject MontrealOnlineServersStore MontrealOnlineServersStore
@inject IServersEFCoreRepository ServersEFCoreRepository

<tr style="background-color: @GetBackGrounfColor()">
    <td>
         @Server.Name
    </td>
    <td>
        @Server.City
    </td>
    <td style="color:@(Server.IsOnline ? "green" : "red")">
            @(Server.IsOnline ? "Online" : "Offline")
    </td>
    <td>
        @if (Server.IsOnline)
        {
            Random rnd = new Random();
            int randomNumber = rnd.Next(0, 500);
            <text>@randomNumber</text>
        }
        else
        {
            <text>N/A</text>
        }
    </td>
    <td>
        @if (Server.IsOnline)
        {
            <button type="button" class="btn btn-outline-danger" @onclick="@(() => {SetServerStatus(false);})">Turn Off</button>
        }
        else
        {
            <button type="button" class="btn btn-outline-success" @onclick="@(() => {SetServerStatus(true);})">Turn On</button>
        }
        &nbsp;
        <a href="/servers/@Server.ServerId" class="btn btn-primary">Edit</a>

    </td>
    <td>
        <EditForm Model="Server" FormName="@($"form-server-{Server.ServerId}")"
                  OnValidSubmit="@(()=>{DeleteServer(Server.ServerId);})">
            <button type="submit" class="btn btn-danger">Delete</button>
        </EditForm>
    </td>
</tr>

@code {
    [Parameter]
    public Server Server { get; set; }

    [CascadingParameter(Name = "SelectedCity")]
    public string SelectedCity { get; set; }

    private bool editingServer = false;

    private void DeleteServer(int serverId)
    {
        ServersEFCoreRepository.DeleteServer(serverId);
        NavigationManager.NavigateTo("/servers", true);
    }

    private string GetBackGrounfColor()
    {
        if (SelectedCity != null)
        {
            switch (SelectedCity)
            {
                case "Ottawa":
                    return "lightgray";
                case "Toronto":
                    return "pink";
                case "Calgary":
                    return "lightgreen";
                case "Halifax":
                    return "lightyellow";
                case "Montreal":
                    return "aqua";
                default:
                    return "white";
            }
        }
        else
            return "";
    }

    private void SetServerStatus(bool status)
    {
        if (Server is not null)
        {
            if (this.Server.IsOnline != status)
            {
                switch (Server.City)
                {
                    case "Ottawa":
                        var num = OttawaOnlineServersStore.GetNumberServersOnline();
                        if (status)
                        {
                            OttawaOnlineServersStore.SetNumbersServersOnline(num + 1);
                        }
                        else if (num >= 1)
                        {
                            OttawaOnlineServersStore.SetNumbersServersOnline(num - 1);
                        }
                        break;
                    case "Toronto":
                        num = TorontoOnlineServersStore.GetNumberServersOnline();
                        if (status)
                        {
                            TorontoOnlineServersStore.SetNumbersServersOnline(num + 1);
                        }
                        else if (num >= 1)
                        {
                            TorontoOnlineServersStore.SetNumbersServersOnline(num - 1);
                        }
                        break;

                    case "Calgary":
                        num = CalgaryOnlineServersStore.GetNumberServersOnline();
                        if (status)
                        {
                            CalgaryOnlineServersStore.SetNumbersServersOnline(num + 1);
                        }
                        else if (num >= 1)
                        {
                            CalgaryOnlineServersStore.SetNumbersServersOnline(num - 1);
                        }
                        break;

                    case "Halifax":
                        num = HalifaxOnlineServersStore.GetNumberServersOnline();
                        if (status)
                        {
                            HalifaxOnlineServersStore.SetNumbersServersOnline(num + 1);
                        }
                        else if (num >= 1)
                        {
                            HalifaxOnlineServersStore.SetNumbersServersOnline(num - 1);
                        }
                        break;

                    case "Montreal":
                        num = MontrealOnlineServersStore.GetNumberServersOnline();
                        if (status)
                        {
                            MontrealOnlineServersStore.SetNumbersServersOnline(num + 1);
                        }
                        else if (num >= 1)
                        {
                            MontrealOnlineServersStore.SetNumbersServersOnline(num - 1);
                        }
                        break;

                    default:
                        break;
                }
            }
        }
        this.Server.IsOnline = status;
    }
}
