@using ServerManagement.Models
@rendermode InteractiveServer

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <CityComponent City="@city" IsSelected="@(IsSelected(city))"
                           SelectCityCallBack="HandleCitySelection"></CityComponent>
            @* <CityComponent City="@city" IsSelected="@(selectedCity.Equals(city,StringComparison.OrdinalIgnoreCase)" ></CityComponent> *@

        }
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<string> SelectCityCallBack { get; set; }

    [Parameter]
    public string SelectedCity { get; set; } = "Toronto";

    private List<string> cities = CitiesRepository.GetCities();
    private bool IsSelected(string city) => SelectedCity.Equals(city, StringComparison.OrdinalIgnoreCase);

    protected override void OnParametersSet()
    {
    }

    public void ClearSelection()
    {
        this.SelectedCity = string.Empty;
    }

    private void HandleCitySelection(string city)
    {
        this.SelectedCity = city;
        SelectCityCallBack.InvokeAsync(city);
    }
}
